<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5AYLDSEgpmkn7QAAA6VJREFU
        WEedl9mrTlEYxg/npCRDhnAylbFIhrhwYUi5kFy4kpI/QSkhXEmIEJckdRKlTOXCWHLBFYUbmYeSkJlz
        TMfzW3s/n3W+9tp756nf+dZee633fde7hr1OS6zu7u6Y3qI1ep4kNolL4pXoFOi3+C6ouyw2iPHC/bCB
        LT/n3poUNxB0cKd54oz4Jurqqzgp5ohme4Eeil8Ij3qo6BCxGC38CU89RZ3fxzosBonYdqDMOZE/EehX
        TpHTsmDcDz0Ss0TsI9AoCL9YIpzun/nv/4pAbOOzWChiX40APD9zxReBHH2RPOoXOagoE5ZtfRAzRcMn
        hV55xRDxQKAq5x7VNDE9K4a6H6J5DVi2eU8MEME3f5yOQwKVpT1eZPyOFmPyMirLArLt/SL45g+w1VCZ
        Ab9jitiWu8RgQeZ2iJ1iu7gvUJEt1xHIDNFYA8cFSqXeI7wtJgv6hKmLdlJb/rtVoFQmXU/GQ+cJ4iM1
        UlnULCCfcGvFRXE+50LEe4GKbCHXvxbtNoY8ymY54iOC9hvDU/lCrZJ9rcHguaxcGcA6Qftr4Sk7/3kX
        Q1Cpkcdy8B0YfJiVkx0dwG5Be45W5HqL/nWz4sHexWDVnLkx+5eFN1yQBTLAjgDKViqTsezrDQFweFTJ
        RvcJ+hBIPzFQcKjwsZktjglUZxpQJ8a6snKlHMRVsUKwj/nAAKdhX4G9zQLVyUQXHd5l5VpRFxl1v8di
        isDmLSqkVBDu85bGzC2qmzYWmle78YI8IbDJKYmaF6rlwO7Q2JeOOiuYjhhtxouQKxk2fVbwrkj2dZTG
        q7NyrTlLydlbKbB5OjylB2Vfq2jMtuJCiVLT4PobYo84KA4IdgVftr1igcDefGEHRfZc91IMowNgEKVS
        ZoOLBe1bw1dIyp99p1gmOONRajD2QdANA3zhfA0ri5pPLbddju9TYmTOWcFipp0pkuu5noUPG859Idkm
        UNXBZCNkZZTgUuIMMecuF8m2twh8tvHH6esjrgtUNhW883vmfVFWbGzNlNznivCgw5UMfCkdK54JlAoi
        Fqn0JbZMtsWHr100fDoAcFRTxXOBSFnZqHhX9d5px/lEEfvqEUD8govmTYGc9qK5TQXQ3IcDaoSIfQTi
        rWTcgDXB/Y7/85CdeaH52VDndQDok1gvsMlaq/3/IQ0dyDjBnuXgqCvWEbdkdgk2sJV2bsUNBBE7cp75
        9i8XHFrslqfibQ5fQi4pnIxLRX9RZCPwTy0tfwGKWX4TZflpcAAAAABJRU5ErkJggg==
</value>
  </data>
</root>